EXPORT The_Valley()
BEGIN
END;
#pragma mode(separator(.,;) integer(h32))

LoadGfx(); ClrScrn(); ClrMap(); ClrMsg(); ClrAt();
SetupValley(); SetupPlayer(); SavePlayer(); LoadPlayer(); NewPlayer();
InitPlayer(); ReadName(); ReadType(); GetChar(); CombatGet(); GetAns();
Play(); PlayLoop(); Message(); Msgs(); MsgsAt(); MsgAt(); MapText();
ShowPlayer(); ShowLabels(); ShowScores(); ShowMap();
ShowRating(); ShowPlayerLoc(); ShowGame(); OnPath(); InLake();
Delay(); HandleSpecial(); PlayerMove(); DirForMove(); DelayWipeUpdate();
IsBlocked(); WillQuit(); NotAllowed(); PushScene(); PopScene();
IsEntry(); IsExit(); HandleStairs(); MaybeDie(); SpecialFind();
UpdateTreasure(); FindSelect(); SelectMonster(); Fight(); ExperienceFactor();
MonsterAttack(); Attack(); CastSpell(); PhysicalAttack(); UseUpEnergy();
SleepIt(); PsiLance(); CrispIt(); MonsterPsiAttack(); MonsterPhysicalAttack();
NewSceneFor(); CreateWood(); CreateSwamp(); CreateBuilding(); CreateTower();
CreateLair(); CreateTemple(); AddTreasure();
SceneMap();

LOCAL diaplayTheme:=0, playerExt:=".csv";
LOCAL rating:=1;
LOCAL playerX:=0, playerY:=0; enteredAt:=0;
LOCAL currentItem:=-1, level:=1, inWoods:=0, buildingType:=0;
LOCAL inLair:=1, inTemple:=2, inTower:=3;
LOCAL treasure:=0, experience:=5, turns:=0;
LOCAL strength:=26, psi:=24, stamina:=150;
LOCAL hasAmulet:=0, amuletStones:=0, hasHelm:=0;
LOCAL space:=32;
LOCAL vBorder:=97, castle:=98, pathUp:=99, pathDown:=100, wood:=101, tree:=102;
LOCAL swamp:=103, tower:=104, player:=105, wall:=106, building:=107, stairs:=108;
LOCAL door:=109, sBorder:=110, lake:=111, playerLake:=112, special:=42, tuft:=45;
LOCAL currentMap:={}; scenes:={};
LOCAL needGfx:=1, needPlayer:=1, playerType:=6, playerName:="NOBODY";
LOCAL psiGain:=0.5, physicalGain:=1.25, maxStamina:=50, maxStrength:=50, maxPsi:=50;
LOCAL playerTypes:={{"WIZARD", 2.0, 0.5, 22, 28, 100, 66, 777},
  {"THINKER", 1.5, 0.75, 24, 26, 113, 72, 241},
  {"BARBARIAN", 0.5, 2.0, 28, 22, 125, 77, 89},
  {"WARRIOR", 1.0, 1.25, 26, 24, 113, 75, 117},
  {"CLERIC", 1.25, 1.0, 25, 25, 113, 74, 157},
  {"DOLT", 1.0, 1.0, 20, 20, 113, 75, 117}};
LOCAL ratings:={"MONSTER FOOD", "PEASANT", "CADET", "CANNON FODDER", "PATH WALKER",
  "NOVICE ADVENTURER", "SURVIVOR", "ADVENTURER", "ASSASSIN",
  "APPRENTICE HERO", "GIANT KILLER", "HERO", "MASTER OF THE SWORD",
  "CHAMPION", "NECROMANCER", "LOREMASTER", "PALADIN", "SUPERHERO",
  "DRAGON SLAYER", "KNIGHT OF THE VALLEY", "MASTER OF COMBAT",
  "DOMINATOR", "PRINCE OF THE VALLEY", "GUARDIAN", "WAR LORD",
  "DEMON KILLER", "LORD OF THE VALLEY", "MASTER OF DESTINY"};
LOCAL lakePos:={{2, 0}, {3, 0},
  {1, 1}, {2, 1}, {3, 1}, {4, 1}, {5, 1},
  {0, 2}, {1, 2}, {4, 2}, {5, 2}, {6, 2},
  {0, 3}, {1, 3}, {4, 3}, {5, 3}, {6, 3},
  {1, 4}, {2, 4}, {3, 4}, {4, 4}, {6, 4}, {7, 4},
  {3, 5}, {4, 5},
  {4, 6}};
LOCAL monsterTypes:={{"WOLFEN", "A", 9, 0},
  {"HOB-GOBLIN", "A", 9, 0},
  {"ORC", "A", 9, 0},
  {"FIRE-IMP", "E", 7, 3},
  {"ROCK-TROLL", "G", 19, 0},
  {"HARPY", "E", 10, 12},
  {"OGRE", "A", 23, 0},
  {"BARROW-WIGHT", "B", 0, 25},
  {"CENTAUR", "H", 18, 14},
  {"FIRE-GIANT", "E", 26, 20},
  {"THUNDER-LIZARD", "V", 50, 0},
  {"MINOTAUR", "C", 35, 25},
  {"WRAITH", "C", 0, 30},
  {"WYVERN", "F", 36, 12},
  {"DRAGON", "B", 50, 20},
  {"RING-WRAITH", "C", 0, 45},
  {"BALROG", "A", 50, 50},
  {"WATER-IMP", "L", 15, 15},
  {"KRAKEN", "L", 50, 0}};
LOCAL monster:={}, monsterOptions:="VAEGH", fireGiant:=10, balrog:=17, ringWraith:=16;
LOCAL monsterStrength:=0, monsterPsi:=0, monsterExperience:=0, fighting:=0;
LOCAL hasAdvantage;
LOCAL wallOffsets:={4,7,3,6,4,4,6,5,3,6,0,3,8,4,3,5,5,3,8,3,4,5,0,6,3,6,4,6,4,7,4,3};
LOCAL deleteKey:=19, enterKey:=30, ratingKey:=50;
LOCAL escKey:=5, aKey:=14, bKey:=15, dKey:=17, hKey:=22, lKey:=26, nKey:=28;
LOCAL rKey:=33, sKey:=34, uKey:=37, yKey:=42, oneKey:=42, twoKey:=43, threeKey:=44;
LOCAL availableSpells:={oneKey, twoKey, threeKey};

Symb()
BEGIN
  Play();
END;
SymbSetup()
BEGIN
END;
PlotSetup()
BEGIN
END;
EXPORT Plot()
BEGIN
  Play();
END;
Num()
BEGIN
  Play();
END;
NumSetup()
BEGIN
END;

START()
BEGIN
  STARTVIEW(6, 1);
END;

Play()
BEGIN
  IF needGfx THEN
    LoadGfx();
  END;
  IF needPlayer THEN
    SetupPlayer();
    SetupValley();
  END;
  PlayLoop();
END;

PlayLoop()
BEGIN
  LOCAL move, shouldQuit;
  ClrScrn();
  ShowPlayer();
  ShowLabels();
  WHILE 1 DO
    ShowGame();
    currentItem:=currentMap(playerY, playerX);
    stamina:=stamina+10;
    IF OnPath(currentItem) THEN
      Msgs({"SAFE ON THE PATH...WHICH WAY ?"});
    ELSE
      Msgs({"YOUR MOVE...WHICH DIRECTION ?"});
    END;
    move:=GetChar();
    ClrMsg();
    IF move < aKey THEN
      shouldQuit:=HandleSpecial(move);
    ELSE
      shouldQuit:=PlayerMove(move);
    END;
    IF shouldQuit THEN RETURN; END;
  END;
END;

OnPath(item)
BEGIN
  RETURN POS({pathUp, pathDown}, item);
END;

InLake()
BEGIN
  RETURN (currentMap(playerY, playerX) == lake);
END;

PlayerMove(move)
BEGIN
  LOCAL dir, newX, newY, newItem, randomFind;
  IF move == ratingKey THEN
    ShowRating();
    stamina:=stamina-10;
    RETURN 0;
  END;
  dir:=DirForMove(move);
  newX:=playerX+dir(1);
  newY:=playerY+dir(2);
  newItem:=currentMap(newY, newX);
  turns:=turns+1;
  IF IsBlocked(newItem) THEN turns:=turns-1; RETURN 0; END;
  IF newItem == castle THEN
    playerX:=newX;
    playerY:=newY;
    RETURN WillQuit();
  END;
  IF NotAllowed(newItem) THEN
    turns:=turns-1;
    stamina:=stamina-10;
    Message(100, {"YOU CANNOT ENTER THIS WAY..."});
    RETURN 0;
  END;
  IF IsEntry(newItem) THEN
    enteredAt:=turns;
    PushScene();
    NewSceneFor(newItem);
    RETURN 0;
  END;
  IF IsExit(newItem) THEN
    IF turns > enteredAt + RANDINT(1, 6) THEN
      PopScene();
      RETURN 0;
    ELSE
      turns:=turns-1;
      stamina:=stamina-10;
      Message(100, {"THE WAY IS BARRED"});
      RETURN 0;
    END;
  END;
  IF newItem == stairs THEN
    playerX:=newX;
    playerY:=newY;
    HandleStairs();
    RETURN 0;
  END;
  IF newItem == lake THEN
    stamina:=stamina-20;
    IF stamina <= 0 THEN
      IF MaybeDie() THEN RETURN 1; END;
    END;
  END;
  playerX:=newX;
  playerY:=newY;
  IF OnPath(newItem) THEN
    RETURN 0;
  END;
  ShowGame();
  IF newItem == special THEN
    SpecialFind();
    DelayWipeUpdate(80);
    RETURN 0;
  END;
  randomFind:=RANDOM;
  CASE
    IF randomFind < 0.33 THEN
      SelectMonster();
      Fight();
      IF (strength <= 0) OR (stamina <= 0) THEN
        IF MaybeDie() THEN RETURN 1; END;
      END;
      DelayWipeUpdate(80);
    END;
    IF randomFind > 0.75 THEN
      FindSelect();
    END;
    DEFAULT
      Message(100, {"NOTHING OF VALUE...SEARCH ON"});
  END;
  RETURN 0;
END;

DirForMove(move)
BEGIN
  LOCAL dx, dy;
  IF move < 32 OR move == 35 OR move == 36 OR move == 40 OR move == 41 OR move > 44 THEN
    move:=38;
  END;
  IF move > 39 THEN move:=move-2; END;
  IF move > 34 THEN move:=move-2; END;
  move:=move-32;
  dx:=(move MOD 3) - 1;
  dy:=IP(move / 3) - 1;
  RETURN {dx, dy};
END;

IsBlocked(item)
BEGIN
  RETURN POS({vBorder, wall, tree}, item);
END;

WillQuit()
BEGIN
  LOCAL key;
  IF strength < 20 THEN strength:=20; END;
  ShowGame();
  Msgs({"THOU ART SAFE IN A CASTLE", "WILT THOU LEAVE THE VALLEY (Y/N) ?"});
  key:=GetAns({yKey, nKey});
  ClrMsg();
  ShowRating();
  IF key == nKey THEN
    stamina:=150;
    Message(250, {"THY WOUNDS HEALED...THY SWORD SHARP", "GO AS THE GODS DEMAND..TRUST NONE OTHER"});
    RETURN 0;
  END;
  ClrScrn();
  MsgAt(0, 1, "DO YOU WISH TO SAVE "+playerName+" ?");
  key:=GetAns({yKey, nKey});
  IF key == yKey THEN
    SavePlayer();
    MsgAt(0, 3, "    *** DONE ***");
    Delay(200);
  END;
  RETURN 1;
END;

NotAllowed(newItem)
BEGIN
  IF currentItem == lake AND newItem == building THEN RETURN 1; END;
  RETURN 0;
END;

IsEntry(newItem)
BEGIN
  RETURN POS({wood, swamp, building, tower}, newItem);
END;

IsExit(newItem)
BEGIN
  RETURN POS({door, sBorder}, newItem);
END;

HandleStairs()
BEGIN
  LOCAL ans, notMoved:=1, x, y;
  ShowGame();
  WHILE notMoved DO
    Msgs({"A STAIRWAY...UP OR DOWN ?"});
    ans:=GetAns({uKey, dKey});
    ClrMsg();
    CASE
      IF (ans == uKey) AND (level < 7) THEN
        PushScene();
        CreateTower(level+1);
        notMoved:=0;
      END;
      IF (ans == dKey) AND (level > 2) THEN
        x:=playerX; y:=playerY;
        PopScene();
        AddTreasure();
        playerX:=x; playerY:=y;
        currentMap(playerY, playerX):=space;
        buildingType:=inTower;
        notMoved:=0;
      END;
      DEFAULT
        Message(110, {"THESE STAIRS ARE BLOCKED "});
    END;
  END;
END;

MaybeDie()
BEGIN
  stamina:=0;
  strength:=0;
  psi:=0;
  ShowGame();
  IF amuletStones == 6 THEN
    stamina:=150;
    strength:=30;
    psi:=30;
    treasure:=0;
    hasAmulet:=0;
    amuletStones:=0;
    Message(150, {"ALARIAN'S AMULET PROTECTS THY SOUL", "  LIVE AGAIN  "});
    RETURN 0;
  ELSE
    Message(300, {"         OH WHAT A FRAIL SHELL", "          IS THIS THAT WE CALL MAN"});
    RETURN 1;
  END;
END;

SpecialFind()
BEGIN
  LOCAL rnd;
  rnd:=RANDOM;
  currentMap(playerY, playerX):=space;
  CASE
    IF (buildingType == inLair) AND (rnd > 0.95) AND (amuletStones == 6) AND (NOT hasHelm) AND (rating > 25) THEN
      Msgs({"YOU FIND THE HELM OF EVANNA !"});
      hasHelm:=1;
      UpdateTreasure();
    END;
    IF (buildingType == inTemple) AND (rnd > 0.85) AND (NOT hasAmulet) THEN
      Msgs({"THE AMULET OF ALARIAN...EMPTY..."});
      hasAmulet:=1;
      UpdateTreasure();
    END;
    IF (buildingType == inTower) AND (rnd > 0.7) AND hasAmulet AND (amuletStones < 6) AND (level > amuletStones) THEN
      Msgs({"AN AMULET STONE..."});
      Delay(60);
      IF rnd > 0.85 THEN
        Msgs({"AN AMULET STONE...", "...BUT THE WRONG ONE !"});
      ELSE
        Msgs({"AN AMULET STONE...", "...THE STONE FITS !"});
        amuletStones:=amuletStones+1;
        UpdateTreasure();
      END;
    END;
    IF rnd > 0.43 THEN
      Msgs({"A WORTHLESS BAUBLE"});
    END;
    DEFAULT
      Msgs({"A PRECIOUS STONE !"});
      UpdateTreasure();
  END;
END;

UpdateTreasure()
BEGIN
  LOCAL factor;
  factor:=amuletStones;
  IF hasAmulet THEN factor:=factor+1; END;
  IF hasHelm THEN factor:=factor+1; END;
  treasure:=treasure + (100 * (factor + level));
END;

FindSelect()
BEGIN
  LOCAL find;
  find:=RANDINT(1, 6);
  CASE
    IF find == 1 THEN
      Message(100, {"A CIRCLE OF EVIL...DEPART IN HASTE !"});
      strength:=strength + IP((level+1)/2);
      psi:=psi - IP((level+1)/2);
      stamina:=stamina - 20;
    END;
    IF find <= 3 THEN
      Message(100, {"A HOARD OF GOLD"});
      treasure:=treasure + IP((level * RANDOM * 100) + 100);
    END;
    DEFAULT
      IF find <= 5 THEN
        Message(100, {"YOU FEEL THE AURA OF THE DEEP MAGIC...", "        ...ALL AROUND YOU..."});
      ELSE
        Message(100, {"...A PLACE OF ANCIENT POWER..."});
      END;
      psi:=psi + 2 + IP(level * psiGain);
      strength:=strength + 1 + IP(level * physicalGain);
      stamina:=stamina + 25;
  END;
END;

SelectMonster()
BEGIN
  LOCAL monsterSelected:=0, monsterNum;
  WHILE NOT monsterSelected DO
    monsterNum:=RANDINT(1, 17);
    IF (monsterNum > fireGiant) AND (RANDOM > 0.85) THEN CONTINUE; END;
    IF InLake() THEN monsterNum:=RANDINT(18, 19); END;
    IF (monsterNum == balrog) AND (RANDOM < 0.7) THEN CONTINUE; END;
    IF (level < 5) AND (monsterNum == ringWraith) THEN CONTINUE; END;
    IF INSTRING(monsterOptions, monsterTypes(monsterNum, 2)) THEN
      monsterSelected:=1;
    END;
  END;
  monster:=monsterTypes(monsterNum);
  IF monster(3) == 0 THEN
    monsterStrength:=0;
  ELSE
    monsterStrength:=IP((strength * 0.3) + monster(3) * (level ^ 0.2) / (RANDOM + 1));
  END;
  IF monster(4) == 0 THEN
    monsterPsi:=0;
  ELSE
    monsterPsi:=IP(monster(4) * (level ^ 0.2) / (RANDOM + 1));
  END;
  monsterExperience:=IP((monsterNum + 1) * (level ^ 1.5));
  Message(100, {"*** BEWARE...THOU HAST ENCOUNTERED ***", "AN EVIL "+monster(1)});
END;

Fight()
BEGIN
  LOCAL monsterAttack:=1, key;
  fighting:=1;
  hasAdvantage:=0;
  ShowScores();
  IF RANDOM >= 0.6 THEN
    Msgs({"YOU HAVE SUPRISE...ATTACK OR RETREAT"});
    key:=CombatGet();
    ClrMsg();
    CASE
      IF key == -1 THEN
        Msgs({"* TOO SLOW...TOO SLOW *"});
        DelayWipeUpdate(110);
      END;
      IF key == rKey THEN
        Msgs({"KNAVISH COWARD !"});
        fighting:=0;
        DelayWipeUpdate(80);
      END;
      IF key == aKey THEN
        monsterAttack:=0;
        Delay(30);
      END;
    END;
  END;
  WHILE fighting DO
    IF monsterAttack THEN
      MonsterAttack();
      monsterAttack:=0;
    ELSE
      Attack();
      IF NOT hasAdvantage THEN monsterAttack:=1; END;
    END;
    IF (strength <= 0) OR (stamina <= 0) THEN fighting:=0; END;
  END;
END;

ExperienceFactor()
BEGIN
  RETURN 39 * LOG(experience) / 3.14;
END;

MonsterAttack()
BEGIN
  Message(80, {"THE CREATURE ATTACKS..."});
  IF (monsterStrength == 0) OR ((monsterStrength < monsterPsi) AND (monsterPsi > 6) AND (RANDOM < 0.5)) THEN
    MonsterPsiAttack();
  ELSE
    MonsterPhysicalAttack();
  END;
  IF (strength > 0) AND (stamina > 0) THEN
    DelayWipeUpdate(100);
  END;
END;

MonsterPsiAttack()
BEGIN
END;

MonsterPhysicalAttack()
BEGIN
  LOCAL damageFactor, damageType, damage;
  monsterStrength:=monsterStrength - 1;
  IF monsterStrength <= 0 THEN
    UseUpEnergy();
    RETURN;
  END;
  damageFactor:=0;
  damageType:=RANDINT(1, 10);
  CASE
    IF damageType == 1 THEN
      Msgs({"IT SWINGS AT YOU...AND MISSES"});
    END;
    IF damageType == 2 THEN
      Msgs({"YOUR BLADE DEFLECTS THE BLOW"});
    END;
    IF damageType == 3 THEN
      Msgs({"...BUT HESITATES, UNSURE..."});
    END;
    IF damageType == 4 THEN
      Msgs({"IT STRIKES YOUR HEAD !"});
      damageFactor:=3;
    END;
    IF (damageType == 5) OR (damageType == 6) THEN
      Msgs({"YOUR CHEST IS STRUCK !"});
      damageFactor:=1.5;
    END;
    IF (damageType == 7) OR (damageType == 8) THEN
      Msgs({"A STRIKE TO YOUR SWORDARM !"});
      damageFactor:=1;
    END;
    IF damageType == 9 THEN
      Msgs({"A BLOW TO YOUR BODY !"});
      damageFactor:=1.3;
    END;
    IF damageType == 10 THEN
      Msgs({"IT CATCHES YOUR LEGS !"});
      damageFactor:=0.5;
    END;
  END;
  IF damageFactor > 0 THEN
    Delay(80);
    ClrMsg();
    damage:=IP((((monsterStrength * 75 * RANDOM) - (10 * strength) - ExperienceFactor()) / 100) * damageFactor);
    CASE
      IF damage < 0 THEN
        Msgs({"...SAVED BY YOUR ARMOUR !  "});
      END;
      IF damage == 0 THEN
        Msgs({"SHAKEN......BUT NO DAMAGE DONE"});
      END;
      IF damage > 0 THEN
        stamina:=stamina - damage;
        IF damage > 9 THEN
          strength:=IP(strength - (damage / 6));
        END;
        Msgs({"YOU TAKE "+damage+" DAMAGE..."});
      END;
    END;
  END;
END;

UseUpEnergy()
BEGIN
  Msgs({"...USING ITS LAST ENERGY IN THE ATTEMPT"});
  experience:=IP(experience + monsterExperience/2);
  fighting:=0;
  DelayWipeUpdate(100);
END;

Attack()
BEGIN
  LOCAL key;
  Msgs({"*** STRIKE QUICKLY ***"});
  key:=CombatGet();
  ClrMsg();
  IF key == -1 THEN
    Msgs({"* TOO SLOW...TOO SLOW *"});
    hasAdvantage:=0;
    DelayWipeUpdate(110);
    RETURN;
  END;
  IF key == sKey THEN
    CastSpell();
    RETURN;
  END;
  PhysicalAttack(key);
END;

CastSpell()
BEGIN
  LOCAL key, result;
  Msgs({"WHICH SPELL SEEK YE ? "});
  key:=CombatGet();
  ClrMsg();
  IF key == -1 THEN
    Msgs({"* TOO SLOW...TOO SLOW *"});
    hasAdvantage:=0;
    DelayWipeUpdate(110);
    RETURN;
  END;
  IF POS(availableSpells, key) == 0 THEN
    Msgs({"NO SUCH SPELL...     "});
    DelayWipeUpdate(60);
    RETURN;
  END;
  IF 4 * psi * RANDOM <= monsterPsi THEN
    Msgs({"NO USE, THE BEAST'S PSI SHIELDS IT"});
    DelayWipeUpdate(60);
    RETURN;
  END;
  result:=2;
  CASE
    IF key == oneKey THEN result:=SleepIt(); END;
    IF key == twoKey THEN result:=PsiLance(); END;
    IF key == threeKey THEN result:=CrispIt(); END;
  END;
  CASE
    IF result == 1 THEN
      fighting:=0;
      DelayWipeUpdate(100);
    END;
    IF result == 2 THEN
      DelayWipeUpdate(60);
    END;
    IF result == 3 THEN
      hasAdvantage:=1;
      DelayWipeUpdate(60);
    END;
    IF result == 4 THEN
      Msgs({"IT IS BEYOND YOU"});
      DelayWipeUpdate(60);
    END;
    IF result == 5 THEN
      fighting:=0;
      Msgs({"THE SPELL SAPS ALL YOUR STRENGTH"});
      DelayWipeUpdate(110);
    END;
    IF result == 6 THEN
      Msgs({"BUT THE SPELL FAILS...!"});
      DelayWipeUpdate(60);
    END;
    IF result == 7 THEN
      Msgs({"NO USE, THE BEAST'S PSI SHIELDS IT"});
      DelayWipeUpdate(60);
    END;
  END;
END;

SleepIt()
BEGIN
  stamina:=stamina-5;
  IF stamina <= 0 THEN RETURN 5; END;
  Msgs({"SLEEP YOU FOUL FIEND THAT I MAY ESCAPE", "AND PRESERVE MY MISERABLE SKIN"});
  DelayWipeUpdate(180);
  Msgs({"THE CREATURE STAGGERS..."});
  Delay(40);
  IF RANDOM < 0.5 THEN
    Msgs({"THE CREATURE STAGGERS...", "BUT RECOVERS WITH A SNARL !"});
    RETURN 2;
  END;
  Msgs({"THE CREATURE STAGGERS...", "AND COLLAPSES...STUNNED"});
  experience:=IP(experience + (monsterExperience / 2));
  RETURN 1;
END;

PsiLance()
BEGIN
  LOCAL damageFactor, damage;
  IF (monsterStrength > stamina) OR (psi < 49) OR (experience < 1000) THEN
    RETURN 4;
  END;
  stamina:=stamina-10;
  IF stamina <= 0 THEN RETURN 5; END;
  IF monsterPsi == 0 THEN
    Msgs({"THIS BEAST HAS NO PSI TO ATTACK"});
    RETURN 2;
  END;
  Msgs({"WITH MY MIND I BATTLE THEE FOR MY LIFE"});
  DelayWipeUpdate(120);
  damageFactor:=RANDOM;
  IF (damageFactor < 0.4) AND (monsterPsi > 10) THEN
    RETURN 6;
  END;
  damage:=IP((((strength * 50 * damageFactor) - 5 * (monsterStrength + monsterPsi) + ExperienceFactor()) / 50) / 4);
  IF damage <= 0 THEN RETURN 7; END;
  Msgs({"THE PSI-LANCE CAUSES "+(damage*2)+" DAMAGE"});
  monsterPsi:=monsterPsi - (3 * damage);
  IF monsterPsi < 0 THEN monsterPsi:=0; END;
  monsterStrength:=monsterStrength - damage;
  IF monsterStrength < 0 THEN monsterStrength:=0; END;
  IF monsterStrength + monsterPsi > 0 THEN RETURN 2; END;
  Msgs({"THE PSI-LANCE CAUSES "+(damage*2)+" DAMAGE", "...KILLING THE CREATURE"});
  experience:=experience + monsterExperience;
  RETURN 1;
END;

CrispIt()
BEGIN
  LOCAL damage;
  IF (psi < 77) OR (experience < 5000) THEN
    RETURN 4;
  END;
  stamina:=stamina-20;
  IF stamina <= 0 THEN RETURN 5; END;
  Msgs({"WITH THE MIGHT OF MY SWORD I SMITE THEE", "WITH THE POWER OF MY SPELL I CURSE THEE", "BURN YE SPAWN OF HELL AND SUFFER..."});
  DelayWipeUpdate(240);
  Message(80, {"A BOLT OF ENERGY LASHES AT THE BEAST..."});
  IF RANDOM > (psi / 780) * (5 - psiGain) THEN
    Msgs({"MISSED IT !"});
    RETURN 2;
  END;
  damage:=IP((strength + psi * RANDOM) - (10 * monsterPsi * RANDOM));
  IF damage <= 0 THEN RETURN 7; END;
  IF monsterStrength == 0 THEN
    monsterPsi:=monsterPsi - damage;
  ELSE
    monsterStrength:=monsterStrength - damage;
    IF damage > 10 THEN
      monsterPsi:=IP(monsterPsi - (damage / 3));
    END;
  END;
  Msgs({"IT STRIKES HOME CAUSING "+damage+" DAMAGE !"});
  IF (monsterStrength + monsterPsi) <= 0 THEN
    Msgs({"IT STRIKES HOME CAUSING "+damage+" DAMAGE !", "THE BEAST DIES SCREAMING !"});
    experience:=experience + monsterExperience;
    RETURN 1;
  END;
  Delay(80);
  RETURN 2;
END;

PhysicalAttack(key)
BEGIN
  LOCAL attackFactor, damageFactor, damage;
  IF monsterStrength == 0 THEN
    Msgs({"YOUR SWORD AVAILS YOU NOUGHT HERE"});
    DelayWipeUpdate(110);
    RETURN;
  END;
  stamina:=stamina-1;
  IF stamina <= 0 THEN
    Msgs({"YOU FATALLY EXHAUST YOURSELF"});
    DelayWipeUpdate(110);
    RETURN;
  END;
  attackFactor:=RANDOM * 10;
  damageFactor:=0;
  CASE
    IF (key == hKey) AND ((attackFactor < 5) OR (strength > (monsterStrength * 4))) THEN
      damageFactor:=2;
    END;
    IF (key == bKey) AND ((attackFactor < 7) OR (strength > (monsterStrength * 4))) THEN
      damageFactor:=1;
    END;
    IF (key == lKey) AND ((attackFactor < 9) OR (strength > (monsterStrength * 4))) THEN
      damageFactor:=0.3;
    END;
  END;
  IF damageFactor == 0 THEN
    Msgs({"YOU MISSED IT !"});
    hasAdvantage:=0;
    DelayWipeUpdate(110);
    RETURN;
  END;
  IF hasAdvantage THEN
    damage:=monsterStrength + IP(RANDOM * 9);
    hasAdvantage:=0;
  ELSE
    damage:=IP((((strength * 50 * RANDOM) - (10 * monsterStrength) + ExperienceFactor()) / 100) * damageFactor);
    IF damage < 0 THEN damage:=0; END;
    IF strength > (monsterStrength - damage) * 4 THEN
      hasAdvantage:=1;
    END;
  END;
  monsterStrength:=monsterStrength - damage;
  Msgs({"A HIT..."});
  Delay(60);
  IF damage == 0 THEN
    Msgs({"A HIT...BUT...NO DAMAGE"});
    hasAdvantage:=0;
    DelayWipeUpdate(110);
    RETURN;
  END;
  Msgs({"A HIT..."+damage+" DAMAGE"});
  IF monsterStrength <= 0 THEN
    Msgs({"A HIT..."+damage+" DAMAGE", "...KILLING THE MONSTER..."});
    experience:=experience + monsterExperience;
    hasAdvantage:=0;
    fighting:=0;
    DelayWipeUpdate(80);
    RETURN;
  END;
  IF hasAdvantage THEN
    Delay(30);
    Msgs({"A HIT..."+damage+" DAMAGE", "THE "+monster(1)+" STAGGERS DEFEATED"});
  END;
  DelayWipeUpdate(110);
END;

PushScene()
BEGIN
  LOCAL newIdx:=SIZE(scenes)+1;
  scenes(newIdx):={currentMap, playerX, playerY, level, inWoods, monsterOptions};
END;

PopScene()
BEGIN
  LOCAL numScenes:=SIZE(scenes), entry;
  IF numScenes == 0 THEN RETURN; END;
  entry:=scenes(numScenes);
  currentMap:=entry(1);
  playerX:=entry(2);
  playerY:=entry(3);
  level:=entry(4);
  inWoods:=entry(5);
  monsterOptions:=entry(6);
  buildingType:=0;
  IF numScenes == 1 THEN
    scenes:={};
  ELSE
    scenes:=SUB(scenes, 1, numScenes-1);
  END;
END;

SetupPlayer()
BEGIN
  LOCAL options:={"New Player"}, option:=2, numFiles, idx, name, extPos;
  numFiles:=SIZE(AFiles);
  IF numFiles > 0 THEN
    FOR idx FROM 1 TO numFiles DO
      name:=AFiles(idx);
      extPos:=INSTRING(name, playerExt);
      IF extPos > 1 THEN
        options(option):=LEFT(name, extPos-1);
        option:=option+1;
      END;
    END;
  END;
  idx:=-1;
  IF SIZE(options) > 1 THEN
    CHOOSE(idx, "Select Player", options);
  END;
  IF idx > 1 THEN
    LoadPlayer(options(idx));
  ELSE
    NewPlayer();
  END;
  needPlayer:=0;
END;

NewPlayer()
BEGIN
  LOCAL idx;
  ClrScrn();
  MsgAt(0, 1, "CHARACTER'S NAME: ");
  playerName:=ReadName();
  MsgAt(0, 3, "CHARACTER TYPES...CHOOSE CAREFULLY");
  FOR idx FROM 1 TO SIZE(playerTypes)-1 DO
    MsgAt(0, idx+4, playerTypes(idx, 1));
    MsgAt(10, idx+4, STRING(idx));
  END;
  playerType:=ReadType();
  InitPlayer();
END;

ReadName()
BEGIN
  LOCAL name:="", key;
  key:=GETKEY;
  WHILE key <> enterKey OR SIZE(name) == 0 DO
    IF key == -1 THEN Delay(10); key:=GETKEY; CONTINUE; END;
    IF key == deleteKey AND SIZE(name) > 0 THEN
      IF SIZE(name) == 1 THEN
        name:="";
      ELSE
        name:=LEFT(name, SIZE(name)-1);
      END;
      MsgAt(18, 1, name+" ");
      key:=GETKEY;
      CONTINUE;
    END;
    IF key < 14 OR key == 19 OR key == 36 OR key == 41 OR key > 43 THEN key:=GETKEY; CONTINUE; END;
    IF key >= 42 THEN key:=key-1; END;
    IF key >= 37 THEN key:=key-1; END;
    IF key >= 31 THEN key:=key-1; END;
    IF key >= 20 THEN key:=key-1; END;
    key:=key+51;
    name:=name+CHAR(key);
    MsgAt(18, 1, name);
    key:=GETKEY;
  END;
  RETURN LEFT(name, 16);
END;

ReadType()
BEGIN
  LOCAL key:=-1;
  WHILE key == -1 DO
    Delay(10);
    key:=GETKEY;
  END;
  IF key == 42 THEN RETURN 1; END;
  IF key == 43 THEN RETURN 2; END;
  IF key == 44 THEN RETURN 3; END;
  IF key == 37 THEN RETURN 4; END;
  IF key == 38 THEN RETURN 5; END;
  RETURN 6;
END;

SavePlayer()
BEGIN
  LOCAL details, fileName;
  fileName:=playerName+playerExt;
  details:={playerType, treasure, experience, turns, strength, psi, hasAmulet, amuletStones, hasHelm};
  AFiles(fileName):=details;
END;

LoadPlayer(name)
BEGIN
  LOCAL details, fileName;
  fileName:=name+playerExt;
  details:=AFiles(fileName);
  playerName:=UPPER(name);
  playerType:=details(1);
  InitPlayer();
  treasure:=details(2);
  experience:=details(3);
  turns:=details(4);
  strength:=details(5);
  psi:=details(6);
  hasAmulet:=details(7);
  amuletStones:=details(8);
  hasHelm:=details(9);
END;

InitPlayer()
BEGIN
  psiGain:=playerTypes(playerType, 2);
  physicalGain:=playerTypes(playerType, 3);
  treasure:=0;
  experience:=5;
  turns:=0;
  stamina:=150;
  strength:=playerTypes(playerType, 4);
  psi:=playerTypes(playerType, 5);
  maxStamina:=playerTypes(playerType, 6);
  maxStrength:=playerTypes(playerType, 7);
  maxPsi:=playerTypes(playerType, 8);
END;

SetupValley()
BEGIN
  LOCAL idx, borderRow, innerRow, bottomRow, x, y, dir;
  LOCAL element, elem1, elem2, prev, scenes;
  currentMap:={};
  borderRow:={};
  FOR idx FROM 1 TO 40 DO
    borderRow(idx):=vBorder;
  END;
  innerRow:={vBorder};
  FOR idx FROM 2 TO 39 DO
    innerRow(idx):=space;
  END;
  innerRow(40):=vBorder;
  currentMap(1):=borderRow;
  FOR idx FROM 2 TO 13 DO
    currentMap(idx):=innerRow;
  END;
  currentMap(14):=borderRow;
  bottomRow:={};
  FOR idx FROM 1 TO 40 DO
    bottomRow(idx):=space;
  END;
  currentMap(15):=bottomRow;
  x:=2; y:=RANDINT(3, 12);
  playerX:=2; playerY:= y;
  currentMap(y, x):=castle;
  prev:=castle;
  FOR x FROM 3 TO 38 DO
    dir:=RANDINT();
    CASE
      IF y <= 2 THEN element:=pathDown; END;
      IF y >= 13 THEN element:=pathUp; END;
      IF dir == 0 THEN element:=pathUp; END;
      DEFAULT element:=pathDown;
    END;
    CASE
      IF prev == castle THEN
        IF element == pathDown THEN y:=y+1; ELSE y:=y-1; END;
      END;
      IF prev == pathDown THEN
        IF element == pathDown THEN y:=y+1; END;
      END;
      DEFAULT IF element == pathUp THEN y:=y-1; END;
    END;
    prev:=element;
    currentMap(y, x):=element;
  END;
  IF element == pathDown THEN y:=y+1; ELSE y:=y-1; END;
  IF y > 13 THEN y:=y-1; END;
  IF y < 2 THEN y:=y+1; END;
  currentMap(y, 39):=castle;
  scenes:={wood, wood, swamp, swamp};
  FOR idx FROM 1 TO SIZE(scenes) DO
    elem1:=-1; elem2:=-1;
    WHILE elem1 <> space OR elem2 <> space DO
      x:=RANDINT(2, 39);
      y:=RANDINT(2, 13);
      elem1:=currentMap(y, x);
      elem2:=currentMap(y, x+1);
    END;
    currentMap(y, x):=scenes(idx);
    currentMap(y, x+1):=scenes(idx);
  END;
  WHILE element <> space DO
    x:=RANDINT(2, 39);
    y:=RANDINT(2, 13);
    element:=currentMap(y, x);
  END;
  currentMap(y, x):=tower;
END;

NewSceneFor(item)
BEGIN
  CASE
    IF item == wood THEN CreateWood(); END;
    IF item == swamp THEN CreateSwamp(); END;
    IF item == building THEN
      IF inWoods THEN
        CreateLair();
      ELSE
        CreateTemple();
      END;
    END;
    IF item == tower THEN CreateTower(2); END;
  END;
END;

CreateWood()
BEGIN
  level:=3;
  inWoods:=1;
  monsterOptions:="FAEHL";
  SceneMap(tree);
END;

CreateSwamp()
BEGIN
  level:=2;
  inWoods:=0;
  monsterOptions:="AFL";
  SceneMap(tuft);
END;

CreateLair()
BEGIN
  buildingType:=inLair;
  level:=7;
  monsterOptions:="CBE";
  CreateBuilding();
  currentMap(15, 7):=door;
  playerX:=7;
  playerY:=14;
  currentMap(playerY, playerX):=space;
  MapText(26, 3, "VOUNIM'S ");
  MapText(28, 4, "LAIR   ");
END;

CreateTemple()
BEGIN
  buildingType:=inTemple;
  level:=6;
  monsterOptions:="CBE";
  CreateBuilding();
  currentMap(15, 7):=door;
  playerX:=7;
  playerY:=14;
  currentMap(playerY, playerX):=space;
  MapText(25, 3, "THE TEMPLE OF");
  MapText(27, 4, "Y'NAGIOTH");
END;

CreateBuilding()
BEGIN
  LOCAL borderRow, innerRow, row, idx, wallsToDo:=1;
  LOCAL offset, height, y, d;
  LOCAL numOffsets:=SIZE(wallOffsets);
  currentMap:={};
  borderRow:={space, space};
  FOR idx FROM 3 TO 23 DO
    borderRow(idx):=wall;
  END;
  FOR idx FROM 24 TO 40 DO
    borderRow(idx):=space;
  END;
  currentMap(1):=borderRow;
  innerRow:={space, space, wall};
  FOR idx FROM 4 TO 40 DO
    innerRow(idx):=space;
  END;
  innerRow(23):=wall;
  FOR idx FROM 2 TO 14 DO
    currentMap(idx):=innerRow;
  END;
  currentMap(15):=borderRow;
  offset:=RANDINT(0, numOffsets-1);
  height:=RANDINT(5, 8);
  IF height == 5 THEN height:=4; END;
  y:=1;
  WHILE wallsToDo DO
    d:={};
    FOR idx FROM 0 TO 2 DO
      d(idx+1):=wallOffsets(((offset+idx) MOD numOffsets) + 1);
    END;
    offset:=(offset+3) MOD numOffsets;
    FOR idx FROM 0 TO height DO
      IF (y+idx) > 13 THEN wallsToDo:=0; BREAK; END;
      IF (d(1) <> 0) AND (idx <> 1) THEN
        currentMap(y+idx+1, 4+d(1)):=wall;
      ELSE
        currentMap(y+idx+1, 4+d(1)):=space;
      END;
      IF idx <> 3 THEN
        currentMap(y+idx+1, 4+d(1)+d(2)):=wall;
      ELSE
        currentMap(y+idx+1, 4+d(1)+d(2)):=space;
      END;
      IF idx <> 4 THEN
        currentMap(y+idx+1, 4+d(1)+d(2)+d(3)):=wall;
      ELSE
        currentMap(y+idx+1, 4+d(1)+d(2)+d(3)):=space;
      END;
    END;
    y:=y+height+1;
  END;
  y:=height+2;
  WHILE y < 13 DO
    FOR idx FROM 1 TO 19 DO
      IF (idx == 2) OR (idx == (3*height)) OR (idx == 17) THEN
        currentMap(y+1, idx+3):=space;
        currentMap(y, idx+3):=space;
        currentMap(y+2, idx+3):=space;
      ELSE
        currentMap(y+1, idx+3):=wall;
      END;
    END;
    y:=y+height+1;
  END;
  AddTreasure();
END;

AddTreasure()
BEGIN
  LOCAL idx, numSpecials, occupied, x, y;
  FOR x FROM 4 TO 22 DO
    FOR y FROM 2 TO 14 DO
      IF currentMap(y, x) == special THEN
        currentMap(y, x):=space;
      END;
    END;
  END;
  IF (level >= 4) AND (RANDOM >= 0.3) THEN
    numSpecials:=RANDINT(3, 7);
    FOR idx FROM 1 TO numSpecials DO
      occupied:=1;
      WHILE occupied DO
        x:=RANDINT(4, 22);
        y:=RANDINT(2, 14);
        IF currentMap(y, x) == space THEN occupied:=0; END;
      END;
      currentMap(y, x):=special;
    END;
  END;
END;

CreateTower(newLevel)
BEGIN
  buildingType:=inTower;
  level:=newLevel;
  monsterOptions:="CAGE";
  CreateBuilding();
  IF (level MOD 2) == 0 THEN
    currentMap(14, 4):=stairs;
    playerX:=22;
    playerY:=2;
  ELSE
    currentMap(2, 22):=stairs;
    playerX:=4;
    playerY:=14;
  END;
  IF level == 2 THEN
    currentMap(15, 7):=door;
    playerX:=7;
    playerY:=14;
  END;
  currentMap(playerY, playerX):=space;
  MapText(25, 4, "THE BLACK TOWER");
  MapText(28, 5, "OF ZAEXON");
  MapText(29, 6, "FLOOR "+level);
END;

SceneMap(fill)
BEGIN
  LOCAL borderRow, innerRow, idx, x, y, lakeX, lakeY;
  currentMap:={};
  borderRow:={};
  FOR idx FROM 1 TO 40 DO
    borderRow(idx):=sBorder;
  END;
  innerRow:={sBorder};
  FOR idx FROM 2 TO 39 DO
    innerRow(idx):=space;
  END;
  innerRow(40):=sBorder;
  currentMap(1):=borderRow;
  FOR idx FROM 2 TO 14 DO
    currentMap(idx):=innerRow;
  END;
  currentMap(15):=borderRow;
  FOR idx FROM 1 TO 200 DO
    x:=RANDINT(2, 39);
    y:=RANDINT(2, 14);
    currentMap(y, x):=fill;
  END;
  lakeX:=RANDINT(2, 30);
  lakeY:=RANDINT(2, 6);
  FOR idx FROM 1 TO SIZE(lakePos) DO
    x:=lakeX+lakePos(idx, 1);
    y:=lakeY+lakePos(idx, 2);
    currentMap(y, x):=lake;
  END;
  currentMap(lakeY+2, lakeX+2):=space;
  currentMap(lakeY+2, lakeX+3):=space;
  currentMap(lakeY+3, lakeX+3):=space;
  currentMap(lakeY+3, lakeX+2):=building;
  playerX:=20;
  playerY:=14;
  currentMap(playerY, playerX):=space;
END;

LoadGfx()
BEGIN
  G1:=AFiles("Charset.png");
  needGfx:=0;
  IF diaplayTheme == 1 THEN
    INVERT_P(G1);
  END;
END;

ShowGame()
BEGIN
  ShowMap();
  ShowScores();
  ShowPlayerLoc();
END;

ShowPlayer()
BEGIN
  MsgAt(0, 15, playerName+"    "+playerTypes(playerType, 1));
END;

ShowPlayerLoc()
BEGIN
  IF InLake() THEN
    MsgAt(playerX-1, playerY-1, {playerLake});
  ELSE
    MsgAt(playerX-1, playerY-1, {player});
  END;
END;

ShowMap()
BEGIN
  MsgsAt(0, 0, currentMap);
END;

ShowLabels()
BEGIN
  ClrAt(0, 16, 40, 3);
  MsgsAt(0, 16, {"TREASURE   = ", "EXPERIENCE = ", "TURNS      = "});
  MsgsAt(21, 16, {"COMBAT STR = ", "PSI POWER  = ", "STAMINA    = "});
END;

ShowScores()
BEGIN
  IF strength > maxStrength THEN strength:=maxStrength; END;
  IF psi < 7 THEN psi:= 7; END;
  IF psi > maxPsi THEN psi:=maxPsi; END;
  IF stamina > maxStamina THEN stamina:=maxStamina; END;
  rating:=IP(0.067 * ((experience + treasure/3) ^ 0.5) + LOG(experience / ((turns + 1) ^ 1.5)));
  IF rating > 28 THEN rating:=28; END;
  IF rating < 1 THEN rating:=1; END;
  ClrAt(13, 16, 7, 3);
  MsgAt(13, 16, STRING(treasure));
  MsgAt(13, 17, STRING(experience));
  MsgAt(13, 18, STRING(turns));
  ClrAt(34, 16, 4, 3);
  MsgAt(34, 16, STRING(strength));
  MsgAt(34, 17, STRING(psi));
  MsgAt(34, 18, STRING(stamina));
  ClrAt(0, 19, 40, 1);
  IF fighting THEN
    MsgAt(0, 19, monster(1));
    MsgAt(21, 19, "M STR = "+monsterStrength+" "+monsterPsi);
  END;
END;

ShowRating()
BEGIN
  LOCAL messages:={}, idx:=2;
  messages(1):="YOUR RATING NOW BE "+STRING(rating)+" ("+ratings(rating)+")";
  IF hasHelm THEN
    messages(idx):="YOU HAVE THE HELM OF EVANNA";
    idx:=idx+1;
  END;
  IF hasAmulet THEN
    messages(idx):="AMULET STONES... "+amuletStones;
    idx:=idx+1;
  END;
  Message(250, messages);
END;

GetChar()
BEGIN
  LOCAL key:=-1;
  WHILE key == -1 DO
    key:=GETKEY;
    Delay(10);
  END;
  RETURN key;
END;

CombatGet()
BEGIN
  LOCAL key:=1, s;
  WHILE key <> -1 DO
    key:=GETKEY;
  END;
  s:=TICKS;
  WHILE (TICKS - s) < 800 DO
    key:=GETKEY;
    IF key <> -1 THEN BREAK; END;
  END;
  RETURN key;
END;

GetAns(options)
BEGIN
  LOCAL key:=-1;
  WHILE POS(options, key) == 0 DO
    key:=GetChar();
  END;
  RETURN key;
END;

MapText(col, row, message)
BEGIN
  LOCAL idx, char;
  FOR idx FROM 1 TO SIZE(message) DO
    char:=message(idx);
    currentMap(row-1, col+idx-1):=char;
  END;
END;

Message(t, messages)
BEGIN
  Msgs(messages);
  Delay(t);
  ClrMsg();
END;

Msgs(messages)
BEGIN
  MsgsAt(0, 21, messages);
END;

MsgsAt(col, row, messages)
BEGIN
  LOCAL idx, msg;
  FOR idx FROM 1 TO SIZE(messages) DO
    msg:=messages(idx);
    MsgAt(col, row+idx-1, msg);
  END;
END;

MsgAt(col, row, message)
BEGIN
  LOCAL idx, char, x, y;
  y:=row*8;
  FOR idx FROM 1 TO SIZE(message) DO
    char:=(message(idx)-32)*8;
    x:=(col+idx-1)*8;
    BLIT_P(G0, x, y, x+8, y+8, G1, char, 0, char+8, 8);
  END;
END;

ClrScrn()
BEGIN
  ClrAt(0, 0, 40, 30);
END;

ClrMap()
BEGIN
  ClrAt(0, 0, 40, 15);
END;

ClrMsg()
BEGIN
  ClrAt(0, 21, 40, 9);
END;

ClrAt(col, row, dCol, dRow)
BEGIN
  LOCAL x:=col*8, y:=row*8, dx:=dCol*8, dy:=dRow*8;
  IF diaplayTheme == 1 THEN
    RECT_P(G0, x, y, x+dx, y+dy, #0, #0);
  ELSE
    RECT_P(G0, x, y, x+dx, y+dy, #FFFFFF, #FFFFFF);
  END;
END;

Delay(n)
BEGIN
  WAIT(n/100);
END;

DelayWipeUpdate(n)
BEGIN
  Delay(n);
  ClrMsg();
  ShowScores();
END;

HandleSpecial(key)
BEGIN
  IF key == escKey THEN needPlayer:=1; END;
  RETURN 1;
END;
